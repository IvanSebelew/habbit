import { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { Form, Input, Button, Card, Typography, Space, Alert, Layout } from 'antd';
import { UserOutlined, LockOutlined } from '@ant-design/icons';
import $api from '../../utils/axiosWithAuth';
import { setAccessToken } from '../../utils/tokenStore';

const { Title, Text } = Typography;
const { Content } = Layout;

export function LoginPage() {
  const [form] = Form.useForm();
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async (values) => {
    setIsLoading(true);
    setMessage('');

    try {
      const response = await $api.post('/auth/login', values);

      if (response.status === 200) {
        setAccessToken(response.data.accessToken);
        
        console.log('‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', {
          accessToken: response.data.accessToken ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
          username: response.data.username,
          role: response.data.role
        });
        
        navigate('/home');
      }
    } catch (error) {
      setMessage(
        error.response?.data?.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
      );
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Layout style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }}>
      <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px' }}>
        <Card 
          style={{ 
            width: 400, 
            boxShadow: '0 8px 24px rgba(0,0,0,0.1)',
            borderRadius: '8px'
          }}
        >
          <Space direction="vertical" size="large" style={{ width: '100%' }}>
            <div style={{ textAlign: 'center' }}>
              <Title level={2}>üéØ TrackHabit</Title>
              <Text type="secondary">–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</Text>
            </div>

            {message && (
              <Alert 
                message={message} 
                type="error" 
                showIcon 
                closable 
              />
            )}

            <Form
              form={form}
              name="login"
              onFinish={handleSubmit}
              layout="vertical"
              size="large"
            >
              <Form.Item
                name="username"
                label="–õ–æ–≥–∏–Ω"
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω' }]}
              >
                <Input 
                  prefix={<UserOutlined />} 
                  placeholder="–í–∞—à –ª–æ–≥–∏–Ω" 
                />
              </Form.Item>

              <Form.Item
                name="password"
                label="–ü–∞—Ä–æ–ª—å"
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' }]}
              >
                <Input.Password
                  prefix={<LockOutlined />}
                  placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å"
                />
              </Form.Item>

              <Form.Item>
                <Button 
                  type="primary" 
                  htmlType="submit" 
                  loading={isLoading}
                  style={{ width: '100%' }}
                >
                  {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
                </Button>
              </Form.Item>
            </Form>

            <div style={{ textAlign: 'center' }}>
              <Text type="secondary">
                –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
                <Link to="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
              </Text>
            </div>
          </Space>
        </Card>
      </Content>
    </Layout>
  );
}