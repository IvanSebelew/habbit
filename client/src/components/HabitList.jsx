import React, { useState, useEffect } from 'react';
import api from '../utils/axiosWithAuth';
import './HabitList.css';

const HabitList = ({username}) => {
  const [habits, setHabits] = useState([]);
  const [newHabit, setNewHabit] = useState({ 
    title: '', 
    frequency: 'daily' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "–µ–∂–µ–¥–Ω–µ–≤–Ω–æ"
  });
  const [editingHabit, setEditingHabit] = useState({ 
    id: null, 
    title: '', 
    frequency: 'daily' 
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–≤—ã—á–µ–∫
  useEffect(() => {
    const fetchHabits = async () => {
      try {
        const response = await api.get('/habits');
        setHabits(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–≤—ã—á–µ–∫:', error);
      }
    };
    fetchHabits();
  }, []);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
  const handleAdd = async (e) => {
    e.preventDefault();
    try {
      const response = await api.post('/habits', {
        title: newHabit.title,
        frequency: newHabit.frequency,
        completed: false
      });
      setHabits([...habits, response.data]);
      setNewHabit({ title: '', frequency: 'daily' }); // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏:', error);
    }
  };

  // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
  const handleEdit = async (e) => {
    e.preventDefault();
    try {
      const response = await api.put(`/habits/${editingHabit.id}`, {
        title: editingHabit.title,
        frequency: editingHabit.frequency
      });
      setHabits(habits.map(habit => 
        habit.id === editingHabit.id ? response.data : habit
      ));
      setEditingHabit({ id: null, title: '', frequency: 'daily' }); // –°–±—Ä–æ—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏:', error);
    }
  };

 
  const handleDelete = async (habitId) => {
    try {
      await api.delete(`/habits/${habitId}`);
      setHabits(habits.filter(habit => habit.id !== habitId));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏:', error);
    }
  };

 
  const handleComplete = async (habitId) => {
    try {
      const response = await api.put(`/habits/${habitId}`, { completed: true });
      setHabits(habits.map(habit => 
        habit.id === habitId ? response.data : habit
      ));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', error);
    }
  };

  // –ó–∞–ø—É—Å–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const startEditing = (habit) => {
    setEditingHabit({ 
      id: habit.id, 
      title: habit.title, 
      frequency: habit.frequency 
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–µ
  const handleChange = (e) => {
    const { name, value } = e.target;
    if (editingHabit.id) {
      setEditingHabit({ ...editingHabit, [name]: value });
    } else {
      setNewHabit({ ...newHabit, [name]: value });
    }
  };

  return (
    <div className="habit-list">
      <h1>–°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫</h1>

      {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      <form onSubmit={handleAdd}>
        <input
          type="text"
          name="title"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏"
          value={newHabit.title}
          onChange={handleChange}
          required
        />
        <select
          name="frequency"
          value={newHabit.frequency}
          onChange={handleChange}
        >
          <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
          <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
        </select>
        <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
      </form>

      
      {editingHabit.id && (
        <form onSubmit={handleEdit}>
          <input
            type="text"
            name="title"
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
            value={editingHabit.title}
            onChange={handleChange}
            required
          />
          <select
            name="frequency"
            value={editingHabit.frequency}
            onChange={handleChange}
          >
            <option value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</option>
            <option value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</option>
          </select>
          <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
          <button 
            type="button"
            onClick={() => setEditingHabit({ id: null, title: '', frequency: 'daily' })}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
        </form>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫ */}
      <ul>
        {habits.map((habit) => (
          <li key={habit.id}>
            <span className={habit.completed ? 'completed' : ''}>
              {habit.title} ({habit.frequency === 'daily' ? '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ' : '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ'})
               {habit.owner && <span className="habit-owner"> - {habit.owner}</span>}
               {username && habit.owner === username && <span className="your-habit"> (–í–∞—à–∞)</span>}
            </span>
            {!habit.completed && (
              <button onClick={() => startEditing(habit)}>‚úèÔ∏è</button>
            )}
            <button 
              onClick={() => handleComplete(habit.id)} 
              disabled={habit.completed}
            >
              {habit.completed ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º'}
            </button>
            <button onClick={() => handleDelete(habit.id)}>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default HabitList;